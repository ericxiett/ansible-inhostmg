---

- name: Create ironic_inspector database
  mysql_db:
    name: ironic_inspector
    state: present
    encoding: utf8
    login_user: root
    login_password: "{{ password }}"

- name: Grant all privileges for ironic-inspector
  command: 'mysql -uroot -p{{ password }} -ne "{{ item }}"'
  with_items:
    - GRANT ALL PRIVILEGES ON ironic_inspector.* TO 'ironic_inspector'@'localhost' IDENTIFIED BY '{{ password }}'
    - GRANT ALL PRIVILEGES ON ironic_inspector.* TO 'ironic_inspector'@'%' IDENTIFIED BY '{{ password }}'

- name: Install openstack-ironic-inspector package
  yum:
    name: /tmp/inhostmg/openstack-ironic-inspector-4.2.0-1.el7.noarch.rpm
    state: latest

- name: Configurate ironic-inspector
  command: 'openstack-config --set /etc/ironic-inspector/inspector.conf "{{ item.section }}" "{{ item.param }}" "{{ item.value }}"'
  with_items:
    - { section: DEFAULT, param: rootwrap_config, value: /etc/ironic-inspector/rootwrap.conf }
    - { section: DEFAULT, param: auth_strategy, value: noauth }
    - { section: DEFAULT, param: log_dir, value: /var/log/ironic-inspector }
    - { section: database, param: connection, value: 'mysql+pymysql://ironic_inspector:"{{ password }}"@"{{ serv_ip }}"/ironic_inspector?charset=utf8' }
    - { section: discovery, param: enroll_node_driver, value: pxe_ipmitool }
    - { section: discovery, param: ipmi_username, value: admin }
    - { section: discovery, param: ipmi_password, value: "{{ ipmi_admin_pass }}" }
    - { section: discovery, param: deploy_kernel, value: "file:///tftpboot/deploy/deploy.vmlinuz" }
    - { section: discovery, param: deploy_ramdisk, value: "file:///tftpboot/deploy/deploy.initramfs" }
    - { section: firewall, param: manage_firewall, value: False }
    - { section: ironic, param: auth_strategy, value: noauth }
    - { section: processing, param: ramdisk_logs_dir, value: /var/log/ironic-inspector/ramdisk }
    - { section: processing, param: add_ports, value: all }
    - { section: processing, param: keep_ports, value: present }
    - { section: processing, param: node_not_found_hook, value: enroll }
    - { section: processing, param: default_processing_hooks, value: "ramdisk_error,root_disk_selection,scheduler,validate_interfaces,capabilities,pci_devices,exhaustive_discovery" }

- name: Create sudoer file
  copy:
    src: files/ironic-inspector-rootwrap
    dest: /etc/sudoers.d/ironic-inspector-rootwrap

- name: Create pxelinux default file
  template:
    src: roles/inspector/templates/default.j2
    dest: /tftpboot/pxelinux.cfg/default

- name: Sync ironic-inspector db
  command: ironic-inspector-dbsync --config-file /etc/ironic-inspector/inspector.conf upgrade
  ignore_errors: True

- name: Start ironic-inspector service
  service:
    name: openstack-ironic-inspector
    enabled: yes
    state: started
